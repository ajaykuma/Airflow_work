Celery executor
-------------
pip install 'apache-airflow[celery]'
--test

celery

RabbitMQ
apt-get install curl gnupg apt-transport-https -y
curl -1sLf "https://keys.openpgp.org/vks/v1/by-fingerprint/0A9AF2115F4687BD29803A206B73A36E6026DFCA" | sudo gpg --dearmor | sudo tee /usr/share/keyrings/com.rabbitmq.team.gpg > /dev/null

curl -1sLf "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xf77f1eda57ebb1cc" | sudo gpg --dearmor | sudo tee /usr/share/keyrings/net.launchpad.ppa.rabbitmq.erlang.gpg > /dev/null

curl -1sLf "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey" | sudo gpg --dearmor | sudo tee /usr/share/keyrings/io.packagecloud.rabbitmq.gpg > /dev/null

Create a new file at /etc/apt/sources.list.d/rabbitmq.list and add the following repositories for ErLang and RabbitMQ respectively that are suited for Ubuntu 22.04 jammy release:

deb [signed-by=/usr/share/keyrings/net.launchpad.ppa.rabbitmq.erlang.gpg] http://ppa.launchpad.net/rabbitmq/rabbitmq-erlang/ubuntu jammy main
deb-src [signed-by=/usr/share/keyrings/net.launchpad.ppa.rabbitmq.erlang.gpg] http://ppa.launchpad.net/rabbitmq/rabbitmq-erlang/ubuntu jammy main
deb [signed-by=/usr/share/keyrings/io.packagecloud.rabbitmq.gpg] https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu/ jammy main
deb-src [signed-by=/usr/share/keyrings/io.packagecloud.rabbitmq.gpg] https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu/ jammy main

apt-get update -y

apt-get install -y erlang-base \
    erlang-asn1 erlang-crypto erlang-eldap erlang-ftp erlang-inets \
    erlang-mnesia erlang-os-mon erlang-parsetools erlang-public-key \
    erlang-runtime-tools erlang-snmp erlang-ssl \
    erlang-syntax-tools erlang-tftp erlang-tools erlang-xmerl

apt-get install rabbitmq-server -y --fix-missing

systemctl status rabbitmq-server

--enable RabbitMQ console
rabbitmq-plugins list

--enable plugins
rabbitmq-plugins enable rabbitmq_management

You can now connect to RabbitMQ web interface. To gain access, open your web browser and type the URL http://your-server-ip:15672:

update airflow.cfg
[core]
executor = CeleryExecutor

[celery]
celery_result_backend = db+postgresql://airflow:airflow@localhost/airflow
broker_url = amqp://guest:guest@localhost:5672//

--to start a worker
airflow celery worker

DAG
from airflow import DAG
from airflow.operators.python_operator import PythonOperator
from datetime import datetime

def Test_world():
    print("Hello, Test!")

with DAG('my_dag', start_date=datetime(2023, 1, 1)) as dag:
    hello_task = PythonOperator(task_id='hello_task', python_callable=Test_world)

Monitoring..
airflow celery flower



